{"ast":null,"code":"var _jsxFileName = \"/Users/nicholasmcconnell/code/todo/client/src/components/todo/TodoOptions.js\";\nimport React, { useEffect, useContext, useState } from 'react';\nimport UserContext from '../../context/UserContext';\nimport { useHistory } from 'react-router-dom';\nimport ErrorNotice from '../misc/ErrorNotice';\nexport default function TodoOptions() {\n  const [error, setError] = useState();\n  const [todoSearch, setTodoSearch] = useState();\n  const {\n    userData\n  } = useContext(UserContext);\n  const history = useHistory();\n  useEffect(() => {\n    if (!userData.user) {\n      history.push('/login');\n    }\n  });\n\n  const submit = async e => {\n    try {\n      e.preventDefault();\n    } catch (err) {\n      err.response.data.msg && setError(err.response.data.msg);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, \"Register\"), error && /*#__PURE__*/React.createElement(ErrorNotice, {\n    message: error,\n    clearError: () => setError(undefined),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"register-email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"register-email\",\n    type: \"email\",\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"register-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"register-password\",\n    type: \"password\",\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Verify password\",\n    onChange: e => setpasswordCheckl(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"register-display-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, \"Display name\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"register-display-name\",\n    type: \"text\",\n    onChange: e => setDisplayName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }))) // <div className='page'>\n  //     <h2>Todos</h2>\n  //     <button>New Todo</button>\n  //     <button>Get Todo's</button>\n  //     <form className='form' onSubmit={submit}>\n  //         <label htmlFor='search-term'>Search:</label>\n  //         <input\n  //         id='todo-search'\n  //         type='search'\n  //         placeholder='Search your todos'\n  //         onChange={e => setTodoSearch(e.target.value)}\n  //         />\n  //     </form>\n  // </div>\n  ;\n}","map":{"version":3,"sources":["/Users/nicholasmcconnell/code/todo/client/src/components/todo/TodoOptions.js"],"names":["React","useEffect","useContext","useState","UserContext","useHistory","ErrorNotice","TodoOptions","error","setError","todoSearch","setTodoSearch","userData","history","user","push","submit","e","preventDefault","err","response","data","msg","undefined","setEmail","target","value","setPassword","setpasswordCheckl","setDisplayName"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext, useState } from 'react';\nimport UserContext from '../../context/UserContext';\nimport { useHistory } from 'react-router-dom';\nimport ErrorNotice from '../misc/ErrorNotice';\n\nexport default function TodoOptions() {\n    const [error, setError] = useState();\n    const [todoSearch, setTodoSearch] = useState();\n\n    const { userData } = useContext(UserContext);\n    const history = useHistory();\n\n    useEffect(() => {\n        if (!userData.user) {\n            history.push('/login')\n        }\n    });\n\n    const submit = async (e) => {\n        try {\n            e.preventDefault();\n            \n        } catch (err) {\n            err.response.data.msg && setError(err.response.data.msg);\n        }\n\n    }\n    return (\n\n        <div className='page'>\n            <h2>Register</h2>\n            {error && (\n                <ErrorNotice message={error} clearError={() => setError(undefined)} />\n            )}\n            <form className='form' onSubmit={submit}>\n                <label htmlFor='register-email'>Email</label>\n                <input\n                    id='register-email'\n                    type='email'\n                    onChange={e => setEmail(e.target.value)}\n                />\n\n                <label htmlFor='register-password'>Password</label>\n                <input\n                    id='register-password'\n                    type='password'\n                    onChange={e => setPassword(e.target.value)}\n                />\n                <input\n                    type='password'\n                    placeholder='Verify password'\n                    onChange={e => setpasswordCheckl(e.target.value)}\n                />\n\n                <label htmlFor='register-display-name'>Display name</label>\n                <input\n                    id='register-display-name'\n                    type='text'\n                    onChange={e => setDisplayName(e.target.value)}\n                />\n\n                <input type='submit' value='Register' />\n\n            </form>\n        </div>\n        // <div className='page'>\n        //     <h2>Todos</h2>\n        //     <button>New Todo</button>\n        //     <button>Get Todo's</button>\n        //     <form className='form' onSubmit={submit}>\n        //         <label htmlFor='search-term'>Search:</label>\n        //         <input\n        //         id='todo-search'\n        //         type='search'\n        //         placeholder='Search your todos'\n        //         onChange={e => setTodoSearch(e.target.value)}\n        //         />\n\n\n        //     </form>\n        // </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}