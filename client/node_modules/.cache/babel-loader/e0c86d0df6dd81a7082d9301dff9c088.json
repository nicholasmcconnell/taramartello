{"ast":null,"code":"var _jsxFileName = \"/Users/nicholasmcconnell/code/todo/client/src/components/todo/CreateTodos.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport { useHistory, Link } from 'react-router-dom';\nimport UserContext from '../../context/UserContext';\nimport API from '../../utils/todoAPI';\nimport ErrorNotice from '../misc/ErrorNotice';\nimport SuccessNotice from '../misc/SuccessNotice';\nimport SuccessContext from '../../context/SuccessContext';\nimport Form from '../layout/UpdateForm';\nimport Card from '../../components/layout/Card';\nexport default function CreateTodos() {\n  const [title, setTitle] = useState('');\n  const [youTubeUrl, setYouTubeUrl] = useState();\n  const [description, setDescription] = useState();\n  const [error, setError] = useState(); // const [todoSuccess, setTodoSuccess] = useState();\n\n  const {\n    userData\n  } = useContext(UserContext);\n  const {\n    todoSuccess,\n    setTodoSuccess\n  } = useContext(SuccessContext);\n  const history = useHistory();\n  localStorage.setItem('lastVisited', 'createtodos');\n  console.log('userdata', userData);\n  useEffect(() => {\n    if (!userData.user) {\n      history.push('/login');\n    }\n  }, []);\n\n  const submit = async e => {\n    console.log('in on submit');\n    e.preventDefault();\n\n    try {\n      const newTodo = {\n        title,\n        youTubeUrl,\n        description\n      };\n      console.log(newTodo);\n      await API.createTodos(newTodo, userData.token).then(res => setTodoSuccess(`Success, ${userData.user.displayName}!  Your Todo has been saved.`)) // .then API.get\n      .catch(err => err.response.data.msg && setError(err.response.data.msg));\n    } catch (err) {\n      console.log(\"something when wrong\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, \"CreateTodos\"), error && /*#__PURE__*/React.createElement(ErrorNotice, {\n    message: error,\n    clearError: () => setError(undefined),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }), todoSuccess && /*#__PURE__*/React.createElement(SuccessNotice, {\n    message: todoSuccess,\n    clearSuccess: () => {\n      setTodoSuccess(undefined); // setTitle('');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"todo-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"todo-title\",\n    type: \"text\",\n    onChange: e => setTitle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"todo-youtubeurl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, \"YouTube Desktop Application URL\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"todo-youtubeurl\",\n    type: \"url\",\n    onChange: e => setYouTubeUrl(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"todo-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    id: \"todo-description\",\n    name: \"todo-description\",\n    onChange: e => setDescription(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"reset\",\n    value: \"Clear\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"type-button\",\n    onClick: setTodoSuccess(undefined),\n    value: \"Home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }, \"Home\")));\n}","map":{"version":3,"sources":["/Users/nicholasmcconnell/code/todo/client/src/components/todo/CreateTodos.js"],"names":["React","useState","useContext","useEffect","useHistory","Link","UserContext","API","ErrorNotice","SuccessNotice","SuccessContext","Form","Card","CreateTodos","title","setTitle","youTubeUrl","setYouTubeUrl","description","setDescription","error","setError","userData","todoSuccess","setTodoSuccess","history","localStorage","setItem","console","log","user","push","submit","e","preventDefault","newTodo","createTodos","token","then","res","displayName","catch","err","response","data","msg","undefined","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react'\nimport { useHistory, Link } from 'react-router-dom';\nimport UserContext from '../../context/UserContext';\nimport API from '../../utils/todoAPI';\nimport ErrorNotice from '../misc/ErrorNotice';\nimport SuccessNotice from '../misc/SuccessNotice';\nimport SuccessContext from '../../context/SuccessContext';\nimport Form from '../layout/UpdateForm';\nimport Card from '../../components/layout/Card';\n\nexport default function CreateTodos() {\n\n    const [title, setTitle] = useState('');\n    const [youTubeUrl, setYouTubeUrl] = useState();\n    const [description, setDescription] = useState();\n    const [error, setError] = useState();\n    // const [todoSuccess, setTodoSuccess] = useState();\n\n    const { userData } = useContext(UserContext);\n    const { todoSuccess, setTodoSuccess} = useContext(SuccessContext);\n    const history = useHistory();\n\n    localStorage.setItem('lastVisited', 'createtodos');\n\n    console.log('userdata', userData)\n\n    useEffect(() => {\n        if (!userData.user) {\n            history.push('/login')\n        }\n    }, []);\n\n    const submit = async (e) => {\n        console.log('in on submit')\n        e.preventDefault();\n        try {\n            const newTodo = { title, youTubeUrl, description }\n\n            console.log(newTodo);\n\n            await API.createTodos(newTodo, userData.token)\n                .then(res => setTodoSuccess(`Success, ${userData.user.displayName}!  Your Todo has been saved.`))\n                // .then API.get\n                .catch(err =>\n                    (err.response.data.msg && setError(err.response.data.msg))\n                )\n\n        } catch (err) {\n            console.log(\"something when wrong\")\n        }\n    }\n\n    return (\n        <div className='page'>\n            <div className='container'>\n                <h2>CreateTodos</h2>\n                {error && (\n                    <ErrorNotice message={error} clearError={() => setError(undefined)} />\n                )}\n\n                {todoSuccess && (\n                    <SuccessNotice message={todoSuccess} clearSuccess={() => {\n                        setTodoSuccess(undefined);\n                        // setTitle('');\n                    }\n                    } />\n                )}\n\n                {/* <Form\n                    onSubmit={submit.bind()}\n                    // setTitle={() => setTitle}\n                    // setYouTubeUrl={setYouTubeUrl}\n                    // setDescription={setDescription}\n\n                /> */}\n\n                <form className='form' onSubmit={submit}>\n                    <label htmlFor='todo-title'>Title</label>\n                    <input\n                        id='todo-title'\n                        type='text'\n                        onChange={e => setTitle(e.target.value)}\n                    />\n\n                    <label htmlFor='todo-youtubeurl'>YouTube Desktop Application URL</label>\n                    <input\n                        id='todo-youtubeurl'\n                        type='url'\n                        onChange={e => setYouTubeUrl(e.target.value)}\n                    />\n\n                    <label htmlFor='todo-description'>Description</label>\n                    <textarea\n                        id='todo-description'\n                        name='todo-description'\n                        onChange={e => setDescription(e.target.value)}\n                    />\n                    <div className='buttons-div'>\n                        <input type='submit' value='Submit' />\n                        <input type='reset' value='Clear' />\n                    </div>\n                </form>\n                {/* <Link to='/'> */}\n                    <button className='type-button' onClick={setTodoSuccess(undefined)} value='Home'>Home</button>\n                {/* </Link> */}\n\n                {/* <Card /> */}\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}