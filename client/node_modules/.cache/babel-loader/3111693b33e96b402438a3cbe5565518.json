{"ast":null,"code":"var _jsxFileName = \"/Users/nicholasmcconnell/code/todo/client/src/components/todo/TodoOptions.js\";\nimport React, { useEffect, useContext, useState } from 'react';\nimport UserContext from '../../context/UserContext';\nimport { useHistory } from 'react-router-dom';\nimport ErrorNotice from '../misc/ErrorNotice';\nexport default function TodoOptions() {\n  const [error, setError] = useState();\n  const [todoSearch, setTodoSearch] = useState();\n  const {\n    userData\n  } = useContext(UserContext);\n  const history = useHistory();\n  useEffect(() => {\n    if (!userData.user) {\n      history.push('/login');\n    }\n  });\n\n  const submit = async e => {\n    try {\n      e.preventDefault();\n    } catch (err) {\n      err.response.data.msg && setError(err.response.data.msg);\n    }\n  };\n\n  return (\n    /*#__PURE__*/\n    // <div className='page'>\n    //     <h2>Register</h2>\n    //     {error && (\n    //         <ErrorNotice message={error} clearError={() => setError(undefined)} />\n    //     )}\n    //     <form className='form' onSubmit={submit}>\n    //         <label htmlFor='register-email'>Email</label>\n    //         <input\n    //             id='register-email'\n    //             type='email'\n    //         />\n    //         <label htmlFor='register-password'>Password</label>\n    //         <input\n    //             id='register-password'\n    //             type='password'\n    //         />\n    //         <input\n    //             type='password'\n    //             placeholder='Verify password'\n    //         />\n    //         <label htmlFor='register-display-name'>Display name</label>\n    //         <input\n    //             id='register-display-name'\n    //             type='text'\n    //         />\n    //         <input type='submit' value='Register' />\n    //     </form>\n    // </div>\n    React.createElement(\"div\", {\n      className: \"page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, \"Todos\"), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, \"New Todo\"), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, \"Get Todo's\"), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form\",\n      onSubmit: submit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"search-term\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, \"Search:\"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"todo-search\",\n      type: \"search\",\n      placeholder: \"Search your todos\",\n      onChange: e => setTodoSearch(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    })))\n  );\n}","map":{"version":3,"sources":["/Users/nicholasmcconnell/code/todo/client/src/components/todo/TodoOptions.js"],"names":["React","useEffect","useContext","useState","UserContext","useHistory","ErrorNotice","TodoOptions","error","setError","todoSearch","setTodoSearch","userData","history","user","push","submit","e","preventDefault","err","response","data","msg","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AAEA,eAAe,SAASC,WAAT,GAAuB;AAClC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,EAAlC;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,EAA5C;AAEA,QAAM;AAAES,IAAAA;AAAF,MAAeV,UAAU,CAACE,WAAD,CAA/B;AACA,QAAMS,OAAO,GAAGR,UAAU,EAA1B;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACW,QAAQ,CAACE,IAAd,EAAoB;AAChBD,MAAAA,OAAO,CAACE,IAAR,CAAa,QAAb;AACH;AACJ,GAJQ,CAAT;;AAMA,QAAMC,MAAM,GAAG,MAAOC,CAAP,IAAa;AACxB,QAAI;AACAA,MAAAA,CAAC,CAACC,cAAF;AAEH,KAHD,CAGE,OAAOC,GAAP,EAAY;AACVA,MAAAA,GAAG,CAACC,QAAJ,CAAaC,IAAb,CAAkBC,GAAlB,IAAyBb,QAAQ,CAACU,GAAG,CAACC,QAAJ,CAAaC,IAAb,CAAkBC,GAAnB,CAAjC;AACH;AAEJ,GARD;;AASA;AAAA;AAEI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAuB,MAAA,QAAQ,EAAEN,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI;AACA,MAAA,EAAE,EAAC,aADH;AAEA,MAAA,IAAI,EAAC,QAFL;AAGA,MAAA,WAAW,EAAC,mBAHZ;AAIA,MAAA,QAAQ,EAAEC,CAAC,IAAIN,aAAa,CAACM,CAAC,CAACM,MAAF,CAASC,KAAV,CAJ5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAJJ;AAlCJ;AAmDH","sourcesContent":["import React, { useEffect, useContext, useState } from 'react';\nimport UserContext from '../../context/UserContext';\nimport { useHistory } from 'react-router-dom';\nimport ErrorNotice from '../misc/ErrorNotice';\n\nexport default function TodoOptions() {\n    const [error, setError] = useState();\n    const [todoSearch, setTodoSearch] = useState();\n\n    const { userData } = useContext(UserContext);\n    const history = useHistory();\n\n    useEffect(() => {\n        if (!userData.user) {\n            history.push('/login')\n        }\n    });\n\n    const submit = async (e) => {\n        try {\n            e.preventDefault();\n            \n        } catch (err) {\n            err.response.data.msg && setError(err.response.data.msg);\n        }\n\n    }\n    return (\n\n        // <div className='page'>\n        //     <h2>Register</h2>\n        //     {error && (\n        //         <ErrorNotice message={error} clearError={() => setError(undefined)} />\n        //     )}\n        //     <form className='form' onSubmit={submit}>\n        //         <label htmlFor='register-email'>Email</label>\n        //         <input\n        //             id='register-email'\n        //             type='email'\n        //         />\n\n        //         <label htmlFor='register-password'>Password</label>\n        //         <input\n        //             id='register-password'\n        //             type='password'\n        //         />\n        //         <input\n        //             type='password'\n        //             placeholder='Verify password'\n        //         />\n\n        //         <label htmlFor='register-display-name'>Display name</label>\n        //         <input\n        //             id='register-display-name'\n        //             type='text'\n        //         />\n\n        //         <input type='submit' value='Register' />\n\n        //     </form>\n        // </div>\n        <div className='page'>\n            <h2>Todos</h2>\n            <button>New Todo</button>\n            <button>Get Todo's</button>\n            <form className='form' onSubmit={submit}>\n                <label htmlFor='search-term'>Search:</label>\n                <input\n                id='todo-search'\n                type='search'\n                placeholder='Search your todos'\n                onChange={e => setTodoSearch(e.target.value)}\n                />\n\n\n            </form>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}