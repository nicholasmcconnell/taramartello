{"ast":null,"code":"var _jsxFileName = \"/Users/nicholasmcconnell/code/todo/client/src/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Axios from 'axios';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport UserContext from './context/UserContext';\nimport * as serviceWorker from './serviceWorker';\nconsole.log('index.js 7373478'); // const [userData, setUserData] = useState({\n//   token: undefined,\n//   user: undefined\n// })\n\nconst history = useHistory();\nconsole.log('1', userData); // useEffect(() => {\n\nconst checkLoggedIn = async () => {\n  let token = localStorage.getItem(\"auth-token\");\n\n  if (token === null) {\n    localStorage.setItem('auth-token', '');\n    token = '';\n    return;\n  }\n\n  const tokenRes = await Axios.post('/api/users/tokenIsValid', null, {\n    headers: {\n      'x-auth-token': token\n    }\n  });\n\n  if (tokenRes.data) {\n    const userRes = await Axios.get('/api/users/', {\n      headers: {\n        'x-auth-token': token\n      }\n    });\n    setUserData({\n      token,\n      user: userRes.data\n    });\n  }\n};\n\ncheckLoggedIn(); // }, [])\n\nReactDOM.render(\n/*#__PURE__*/\n// <React.StrictMode>\nReact.createElement(UserContext.Provider, {\n  value: {\n    userData,\n    setUserData\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }\n})), // </React.StrictMode>,\ndocument.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/nicholasmcconnell/code/todo/client/src/index.js"],"names":["React","useState","useEffect","useHistory","Axios","ReactDOM","App","UserContext","serviceWorker","console","log","history","userData","checkLoggedIn","token","localStorage","getItem","setItem","tokenRes","post","headers","data","userRes","get","setUserData","user","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AAEAC,OAAO,CAACC,GAAR,CAAY,kBAAZ,E,CAEA;AACA;AACA;AACA;;AAEA,MAAMC,OAAO,GAAGR,UAAU,EAA1B;AAEAM,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBE,QAAjB,E,CAEA;;AACE,MAAMC,aAAa,GAAG,YAAY;AAChC,MAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAZ;;AACA,MAAIF,KAAK,KAAK,IAAd,EAAoB;AAClBC,IAAAA,YAAY,CAACE,OAAb,CAAqB,YAArB,EAAmC,EAAnC;AACAH,IAAAA,KAAK,GAAG,EAAR;AACA;AACD;;AAED,QAAMI,QAAQ,GAAG,MAAMd,KAAK,CAACe,IAAN,CACrB,yBADqB,EAErB,IAFqB,EAGrB;AAAEC,IAAAA,OAAO,EAAE;AAAE,sBAAgBN;AAAlB;AAAX,GAHqB,CAAvB;;AAKA,MAAII,QAAQ,CAACG,IAAb,EAAmB;AACjB,UAAMC,OAAO,GAAG,MAAMlB,KAAK,CAACmB,GAAN,CAAU,aAAV,EAAyB;AAC7CH,MAAAA,OAAO,EAAE;AAAE,wBAAgBN;AAAlB;AADoC,KAAzB,CAAtB;AAGAU,IAAAA,WAAW,CAAC;AACVV,MAAAA,KADU;AAEVW,MAAAA,IAAI,EAAEH,OAAO,CAACD;AAFJ,KAAD,CAAX;AAID;AACF,CAtBD;;AAuBAR,aAAa,G,CACf;;AAEAR,QAAQ,CAACqB,MAAT;AAAA;AACE;AACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,EAAA,KAAK,EAAE;AAAEd,IAAAA,QAAF;AAAYY,IAAAA;AAAZ,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADA,CAFJ,EAOE;AACAG,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CARF,E,CAWA;AACA;AACA;;AACApB,aAAa,CAACqB,UAAd","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Axios from 'axios';\n\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport UserContext from './context/UserContext';\nimport * as serviceWorker from './serviceWorker';\n\nconsole.log('index.js 7373478')\n\n// const [userData, setUserData] = useState({\n//   token: undefined,\n//   user: undefined\n// })\n\nconst history = useHistory();\n\nconsole.log('1', userData)\n\n// useEffect(() => {\n  const checkLoggedIn = async () => {\n    let token = localStorage.getItem(\"auth-token\");\n    if (token === null) {\n      localStorage.setItem('auth-token', '');\n      token = '';\n      return;\n    }\n\n    const tokenRes = await Axios.post(\n      '/api/users/tokenIsValid',\n      null,\n      { headers: { 'x-auth-token': token } }\n    );\n    if (tokenRes.data) {\n      const userRes = await Axios.get('/api/users/', {\n        headers: { 'x-auth-token': token }\n      });\n      setUserData({\n        token,\n        user: userRes.data\n      })\n    }\n  };\n  checkLoggedIn();\n// }, [])\n\nReactDOM.render(\n  // <React.StrictMode>\n    <UserContext.Provider value={{ userData, setUserData }}>\n    <App />\n\n    </UserContext.Provider>,\n\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}