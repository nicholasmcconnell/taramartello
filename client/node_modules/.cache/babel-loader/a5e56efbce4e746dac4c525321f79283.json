{"ast":null,"code":"import _regeneratorRuntime from\"/Users/nicholasmcconnell/code/todo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/nicholasmcconnell/code/todo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/nicholasmcconnell/code/todo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext,useEffect}from'react';import{useHistory,Link}from'react-router-dom';import UserContext from'../../context/UserContext';import API from'../../utils/todoAPI';import ErrorNotice from'../misc/ErrorNotice';import SuccessNotice from'../misc/SuccessNotice';// import SuccessContext from '../../context/SuccessContext';\nimport Form from'../layout/UpdateForm';import Card from'../../components/layout/Card';export default function CreateTodos(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),title=_useState2[0],setTitle=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),youTubeUrl=_useState4[0],setYouTubeUrl=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),description=_useState6[0],setDescription=_useState6[1];var _useState7=useState(),_useState8=_slicedToArray(_useState7,2),error=_useState8[0],setError=_useState8[1];var _useState9=useState(),_useState10=_slicedToArray(_useState9,2),todoSuccess=_useState10[0],setTodoSuccess=_useState10[1];var _useContext=useContext(UserContext),userData=_useContext.userData;var history=useHistory();localStorage.setItem('lastVisited','createtodos');useEffect(function(){if(!userData.user){history.push('/login');}},[]);var setIntialStates=function setIntialStates(){// Send initial state as prop to error and success\nsetTodoSuccess(undefined);setError(undefined);setTitle('');setYouTubeUrl('');setDescription('');};var submit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var newTodo;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();_context.prev=1;newTodo={title:title,youTubeUrl:youTubeUrl,description:description};_context.next=5;return API.createTodos(newTodo,userData.token).then(function(res){return setTodoSuccess(\"Success, \".concat(userData.user.displayName,\"!  Your Todo has been saved.\"));})// .then API.get\n.catch(function(err){return err.response.data.msg&&setError(err.response.data.msg);});case 5:_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](1);console.log(\"Something when wrong\");case 10:case\"end\":return _context.stop();}}},_callee,null,[[1,7]]);}));return function submit(_x){return _ref.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(\"div\",{className:\"page\"},/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},/*#__PURE__*/React.createElement(\"h2\",null,\"CreateTodos\"),error&&/*#__PURE__*/React.createElement(ErrorNotice,{message:error,clearError:function clearError(){return setError(undefined);}}),todoSuccess&&/*#__PURE__*/React.createElement(SuccessNotice,{message:todoSuccess,clearSuccess:function clearSuccess(){setTodoSuccess(undefined);// setTitle('');\n}}),/*#__PURE__*/React.createElement(\"form\",{className:\"form\",onSubmit:submit},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"todo-title\"},\"Title\"),/*#__PURE__*/React.createElement(\"input\",{id:\"todo-title\",type:\"text\",onChange:function onChange(e){return setTitle(e.target.value);}}),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"todo-youtubeurl\"},\"YouTube URL\"),/*#__PURE__*/React.createElement(\"input\",{id:\"todo-youtubeurl\",type:\"url\",onChange:function onChange(e){return setYouTubeUrl(e.target.value);}}),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"todo-description\"},\"Description\"),/*#__PURE__*/React.createElement(\"textarea\",{id:\"todo-description\",name:\"todo-description\",onChange:function onChange(e){return setDescription(e.target.value);}}),/*#__PURE__*/React.createElement(\"div\",{className:\"buttons-div\"},/*#__PURE__*/React.createElement(\"input\",{type:\"submit\",value:\"Submit\"}),/*#__PURE__*/React.createElement(\"input\",{type:\"reset\",value:\"Clear\",onClick:setIntialStates}))),/*#__PURE__*/React.createElement(\"button\",{className:\"type-button\",onClick:function onClick(){history.push('/');setTodoSuccess(undefined);},value:\"Home\"},\"Home\")));}","map":{"version":3,"sources":["/Users/nicholasmcconnell/code/todo/client/src/components/todo/CreateTodos.js"],"names":["React","useState","useContext","useEffect","useHistory","Link","UserContext","API","ErrorNotice","SuccessNotice","Form","Card","CreateTodos","title","setTitle","youTubeUrl","setYouTubeUrl","description","setDescription","error","setError","todoSuccess","setTodoSuccess","userData","history","localStorage","setItem","user","push","setIntialStates","undefined","submit","e","preventDefault","newTodo","createTodos","token","then","res","displayName","catch","err","response","data","msg","console","log","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react'\nimport { useHistory, Link } from 'react-router-dom';\nimport UserContext from '../../context/UserContext';\nimport API from '../../utils/todoAPI';\nimport ErrorNotice from '../misc/ErrorNotice';\nimport SuccessNotice from '../misc/SuccessNotice';\n// import SuccessContext from '../../context/SuccessContext';\nimport Form from '../layout/UpdateForm';\nimport Card from '../../components/layout/Card';\n\nexport default function CreateTodos() {\n\n    const [title, setTitle] = useState('');\n    const [youTubeUrl, setYouTubeUrl] = useState();\n    const [description, setDescription] = useState();\n    const [error, setError] = useState();\n    const [todoSuccess, setTodoSuccess] = useState();\n\n    const { userData } = useContext(UserContext);\n    const history = useHistory();\n\n    localStorage.setItem('lastVisited', 'createtodos');\n\n    useEffect(() => {\n        if (!userData.user) {\n            history.push('/login')\n        }\n    }, []);\n\n    const setIntialStates = () => {\n        // Send initial state as prop to error and success\n        setTodoSuccess(undefined);\n        setError(undefined)\n        setTitle('');\n        setYouTubeUrl('');\n        setDescription('');\n    }\n\n    const submit = async (e) => {\n        e.preventDefault();\n        try {\n            const newTodo = { title, youTubeUrl, description }\n\n            await API.createTodos(newTodo, userData.token)\n                .then(res => setTodoSuccess(`Success, ${userData.user.displayName}!  Your Todo has been saved.`))\n                // .then API.get\n                .catch(err =>\n                    (err.response.data.msg && setError(err.response.data.msg))\n                )\n\n        } catch (err) {\n            console.log(\"Something when wrong\")\n        }\n        // setIntialStates();\n    }\n\n    return (\n        <div className='page'>\n            <div className='container'>\n                <h2>CreateTodos</h2>\n                {error && (\n                    <ErrorNotice message={error} clearError={() => setError(undefined)} />\n                )}\n\n                {todoSuccess && (\n                    <SuccessNotice message={todoSuccess} clearSuccess={() => {\n                        setTodoSuccess(undefined);\n                        // setTitle('');\n                    }\n                    } />\n                )}\n\n                {/* <Form\n                    onSubmit={submit.bind()}\n                    // setTitle={() => setTitle}\n                    // setYouTubeUrl={setYouTubeUrl}\n                    // setDescription={setDescription}\n\n                /> */}\n\n                <form className='form' onSubmit={submit}>\n                    <label htmlFor='todo-title'>Title</label>\n                    <input\n                        id='todo-title'\n                        type='text'\n                        onChange={e => setTitle(e.target.value)}\n                    />\n\n                    <label htmlFor='todo-youtubeurl'>YouTube URL</label>\n                    <input\n                        id='todo-youtubeurl'\n                        type='url'\n                        onChange={e => setYouTubeUrl(e.target.value)}\n                    />\n\n                    <label htmlFor='todo-description'>Description</label>\n                    <textarea\n                        id='todo-description'\n                        name='todo-description'\n                        onChange={e => setDescription(e.target.value)}\n                    />\n                    <div className='buttons-div'>\n                        <input type='submit' value='Submit'/>\n                        <input type='reset' value='Clear' onClick={setIntialStates}/>\n                    </div>\n                </form>\n                <button className='type-button' onClick={() => { history.push('/'); setTodoSuccess(undefined); }} value='Home'>Home</button>\n\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}