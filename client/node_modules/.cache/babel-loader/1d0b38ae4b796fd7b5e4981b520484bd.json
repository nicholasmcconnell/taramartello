{"ast":null,"code":"var _jsxFileName = \"/Users/nicholasmcconnell/code/todo/client/src/components/layout/UpdateForm.js\";\nimport React from 'react';\nexport default function Form(props) {\n  const {\n    title,\n    youTubeUrl,\n    description\n  } = props.props.todoList;\n\n  const submit = async e => {\n    console.log('in on submit');\n    e.preventDefault();\n\n    try {\n      const updateTodo = {\n        title,\n        youTubeUrl,\n        description\n      };\n      console.log(updateTodo);\n      await API.createTodos(updateTodo, userData.token).then(res => setTodoSuccess(`Success, ${userData.user.displayName}!  Your Todo has been saved.`)) // .then API.get\n      .catch(err => err.response.data.msg && setError(err.response.data.msg));\n    } catch (err) {\n      console.log(\"something when wrong\");\n    }\n  };\n\n  console.log('in forms', title, youTubeUrl, description);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, console.log(typeof title), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: () => props.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"todo-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"todo-title\",\n    type: \"text\",\n    value: title // onChange={e => props.setTitle(e.target.value)}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"todo-youtubeurl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, \"YouTube Desktop Application URL\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"todo-youtubeurl\",\n    type: \"url\",\n    value: youTubeUrl // onChange={e => props.setYouTubeUrl(e.target.value)}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"todo-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    id: \"todo-description\",\n    name: \"todo-description\",\n    value: \"description\" // onChange={e => props.setDescription(e.target.value)}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"reset\",\n    value: \"Clear\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/nicholasmcconnell/code/todo/client/src/components/layout/UpdateForm.js"],"names":["React","Form","props","title","youTubeUrl","description","todoList","submit","e","console","log","preventDefault","updateTodo","API","createTodos","userData","token","then","res","setTodoSuccess","user","displayName","catch","err","response","data","msg","setError"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAEhC,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,UAAT;AAAqBC,IAAAA;AAArB,MAAqCH,KAAK,CAACA,KAAN,CAAYI,QAAvD;;AAEA,QAAMC,MAAM,GAAG,MAAOC,CAAP,IAAa;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAF,IAAAA,CAAC,CAACG,cAAF;;AACA,QAAI;AACA,YAAMC,UAAU,GAAG;AAAET,QAAAA,KAAF;AAASC,QAAAA,UAAT;AAAqBC,QAAAA;AAArB,OAAnB;AAEAI,MAAAA,OAAO,CAACC,GAAR,CAAYE,UAAZ;AAEA,YAAMC,GAAG,CAACC,WAAJ,CAAgBF,UAAhB,EAA4BG,QAAQ,CAACC,KAArC,EACDC,IADC,CACIC,GAAG,IAAIC,cAAc,CAAE,YAAWJ,QAAQ,CAACK,IAAT,CAAcC,WAAY,8BAAvC,CADzB,EAEF;AAFE,OAGDC,KAHC,CAGKC,GAAG,IACLA,GAAG,CAACC,QAAJ,CAAaC,IAAb,CAAkBC,GAAlB,IAAyBC,QAAQ,CAACJ,GAAG,CAACC,QAAJ,CAAaC,IAAb,CAAkBC,GAAnB,CAJpC,CAAN;AAOH,KAZD,CAYE,OAAOH,GAAP,EAAY;AACVd,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACH;AACJ,GAlBD;;AAoBAD,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBP,KAAxB,EAA+BC,UAA/B,EAA2CC,WAA3C;AACA,sBACI,0CACCI,OAAO,CAACC,GAAR,CAAY,OAAOP,KAAnB,CADD,eAEI;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAuB,IAAA,QAAQ,EAAE,MAAMD,KAAK,CAACK,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI;AACI,IAAA,EAAE,EAAC,YADP;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,KAAK,EAAEJ,KAHX,CAII;AAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eASI;AAAO,IAAA,OAAO,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCATJ,eAUI;AACI,IAAA,EAAE,EAAC,iBADP;AAEI,IAAA,IAAI,EAAC,KAFT;AAGI,IAAA,KAAK,EAAEC,UAHX,CAII;AAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,eAiBI;AAAO,IAAA,OAAO,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAjBJ,eAkBI;AACI,IAAA,EAAE,EAAC,kBADP;AAEI,IAAA,IAAI,EAAC,kBAFT;AAGI,IAAA,KAAK,EAAC,aAHV,CAII;AAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBJ,eAwBI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,KAAK,EAAC,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAxBJ,CAFJ,CADJ;AAkCH","sourcesContent":["import React from 'react'\n\nexport default function Form(props) {\n\n    const { title, youTubeUrl, description } = props.props.todoList;\n\n    const submit = async (e) => {\n        console.log('in on submit')\n        e.preventDefault();\n        try {\n            const updateTodo = { title, youTubeUrl, description }\n\n            console.log(updateTodo);\n\n            await API.createTodos(updateTodo, userData.token)\n                .then(res => setTodoSuccess(`Success, ${userData.user.displayName}!  Your Todo has been saved.`))\n                // .then API.get\n                .catch(err =>\n                    (err.response.data.msg && setError(err.response.data.msg))\n                )\n\n        } catch (err) {\n            console.log(\"something when wrong\")\n        }\n    }\n\n    console.log('in forms', title, youTubeUrl, description )\n    return (\n        <>\n        {console.log(typeof title)}\n            <form className='form' onSubmit={() => props.submit}>\n                <label htmlFor='todo-title'>Title</label>\n                <input\n                    id='todo-title'\n                    type='text'\n                    value={title}\n                    // onChange={e => props.setTitle(e.target.value)}\n                ></input>\n\n                <label htmlFor='todo-youtubeurl'>YouTube Desktop Application URL</label>\n                <input\n                    id='todo-youtubeurl'\n                    type='url'\n                    value={youTubeUrl}\n                    // onChange={e => props.setYouTubeUrl(e.target.value)}\n                />\n\n                <label htmlFor='todo-description'>Description</label>\n                <textarea\n                    id='todo-description'\n                    name='todo-description'\n                    value='description'\n                    // onChange={e => props.setDescription(e.target.value)}\n                />\n                <div className='buttons-div'>\n                    <input type='submit' value='Submit' />\n                    <input type='reset' value='Clear' />\n                </div>\n            </form>\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}