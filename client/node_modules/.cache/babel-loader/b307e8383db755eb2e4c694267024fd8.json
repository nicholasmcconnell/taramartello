{"ast":null,"code":"var _jsxFileName = \"/Users/nicholasmcconnell/code/taramartello/client/src/components/layout/UpdateForm.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport UserContext from '../../context/UserContext';\nimport API from '../../utils/todoAPI';\nimport ErrorNotice from '../misc/ErrorNotice';\nimport SuccessNotice from '../misc/SuccessNotice';\nexport default function Form(props) {\n  const {\n    _id,\n    title,\n    youTubeUrl,\n    description\n  } = props.props.todoList;\n  const [titleUpdate, setTitleUpdate] = useState();\n  const [youTubeUrlUpdate, setYouTubeUrlUpdate] = useState();\n  const [descriptionUpdate, setDescriptionUpdate] = useState();\n  const [error, setError] = useState();\n  const {\n    userData\n  } = useContext(UserContext); // useEffect(() => {\n  //     setTitleUpdate(title);\n  // })\n\n  const submit = async e => {\n    e.preventDefault();\n\n    try {\n      const updateTodo = {\n        title: !titleUpdate ? description : titleUpdate,\n        youTubeUrl: !youTubeUrlUpdate ? youTubeUrl : youTubeUrlUpdate,\n        description: !descriptionUpdate ? description : descriptionUpdate\n      };\n      await API.updateTodo(updateTodo, userData.token, _id).then(res => props.setTodoSuccess(`Success, ${userData.user.displayName}!  Your Todo has been saved.`)).catch(err => err.response.data.msg && setError(err.response.data.msg));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, error && /*#__PURE__*/React.createElement(ErrorNotice, {\n    message: error,\n    clearError: () => setError(undefined),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }), props.todoSuccess && /*#__PURE__*/React.createElement(SuccessNotice, {\n    message: props.todoSuccess,\n    clearSuccess: () => {\n      props.setTodoSuccess(undefined);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"todo-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"todo-title\",\n    type: \"text\",\n    defaultValue: title,\n    onChange: e => setTitleUpdate(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"todo-youtubeurl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, \"YouTube URL\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"todo-youtubeurl\",\n    type: \"url\",\n    defaultValue: youTubeUrl,\n    onChange: e => setYouTubeUrlUpdate(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"todo-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    id: \"todo-description\",\n    name: \"todo-description\",\n    defaultValue: description,\n    onChange: e => setDescriptionUpdate(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"reset\",\n    value: \"Clear\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/nicholasmcconnell/code/taramartello/client/src/components/layout/UpdateForm.js"],"names":["React","useState","useEffect","useContext","UserContext","API","ErrorNotice","SuccessNotice","Form","props","_id","title","youTubeUrl","description","todoList","titleUpdate","setTitleUpdate","youTubeUrlUpdate","setYouTubeUrlUpdate","descriptionUpdate","setDescriptionUpdate","error","setError","userData","submit","e","preventDefault","updateTodo","token","then","res","setTodoSuccess","user","displayName","catch","err","response","data","msg","console","log","undefined","todoSuccess","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport UserContext from '../../context/UserContext';\nimport API from '../../utils/todoAPI';\nimport ErrorNotice from '../misc/ErrorNotice';\nimport SuccessNotice from '../misc/SuccessNotice';\n\nexport default function Form(props) {\n\n    const { _id, title, youTubeUrl, description } = props.props.todoList;\n\n    const [titleUpdate, setTitleUpdate] = useState();\n    const [youTubeUrlUpdate, setYouTubeUrlUpdate] = useState();\n    const [descriptionUpdate, setDescriptionUpdate] = useState();\n    const [error, setError] = useState();\n\n    const { userData } = useContext(UserContext);\n\n\n    // useEffect(() => {\n    //     setTitleUpdate(title);\n\n    // })\n\n    const submit = async (e) => {\n        e.preventDefault();\n        try {\n\n            const updateTodo = {\n                title: !titleUpdate ? description : titleUpdate,\n                youTubeUrl: !youTubeUrlUpdate ? youTubeUrl : youTubeUrlUpdate,\n                description: !descriptionUpdate ? description : descriptionUpdate\n            }\n\n            await API.updateTodo(updateTodo, userData.token, _id)\n                .then(res => props.setTodoSuccess(`Success, ${userData.user.displayName}!  Your Todo has been saved.`))\n                .catch(err =>\n                    (err.response.data.msg && setError(err.response.data.msg))\n                )\n\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    return (\n        <>\n            <div className='container'>\n                {error && (\n                    <ErrorNotice message={error} clearError={() => setError(undefined)} />\n                )}\n\n                {props.todoSuccess && (\n                    <SuccessNotice message={props.todoSuccess} clearSuccess={() => {\n                        props.setTodoSuccess(undefined);\n                    }\n                    } />\n                )}\n                <form className='form' onSubmit={submit}>\n                    <label htmlFor='todo-title'>Title</label>\n                    <input\n                        id='todo-title'\n                        type='text'\n                        defaultValue={title}\n                        onChange={e => setTitleUpdate(e.target.value)}\n                    ></input>\n\n                    <label htmlFor='todo-youtubeurl'>YouTube URL</label>\n                    <input\n                        id='todo-youtubeurl'\n                        type='url'\n                        defaultValue={youTubeUrl}\n                        onChange={e => setYouTubeUrlUpdate(e.target.value)}\n                    />\n\n                    <label htmlFor='todo-description'>Description</label>\n                    <textarea\n                        id='todo-description'\n                        name='todo-description'\n                        defaultValue={description}\n                        onChange={e => setDescriptionUpdate(e.target.value)}\n\n                    />\n                    <div className='buttons-div'>\n                        <input type='submit' value='Submit' />\n                        <input type='reset' value='Clear' />\n                    </div>\n                </form>\n            </div>\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}