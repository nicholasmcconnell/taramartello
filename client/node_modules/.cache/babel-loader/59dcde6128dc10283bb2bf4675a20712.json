{"ast":null,"code":"var _jsxFileName = \"/Users/nicholasmcconnell/code/todo/client/src/components/layout/Form.js\";\nimport React from 'react';\nexport default function Form(props) {\n  const {\n    title,\n    youTubeUrl,\n    description\n  } = props.props.todoList;\n  console.log('in forms', title, youTubeUrl, description);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: () => props.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"todo-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"todo-title\",\n    type: \"text\" // placeholder={props.todolist.title ? props.todolist.title : 'undefined'}\n    // onChange={e => props.setTitle(e.target.value)}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }\n  }, title || ''), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"todo-youtubeurl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }, \"YouTube Desktop Application URL\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"todo-youtubeurl\",\n    type: \"url\" // onChange={e => props.setYouTubeUrl(e.target.value)}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"todo-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    id: \"todo-description\",\n    name: \"todo-description\" // onChange={e => props.setDescription(e.target.value)}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"reset\",\n    value: \"Clear\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/nicholasmcconnell/code/todo/client/src/components/layout/Form.js"],"names":["React","Form","props","title","youTubeUrl","description","todoList","console","log","submit"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAEhC,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,UAAT;AAAqBC,IAAAA;AAArB,MAAqCH,KAAK,CAACA,KAAN,CAAYI,QAAvD;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBL,KAAxB,EAA+BC,UAA/B,EAA2CC,WAA3C;AACA,sBACI,uDACI;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAuB,IAAA,QAAQ,EAAE,MAAMH,KAAK,CAACO,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI;AACI,IAAA,EAAE,EAAC,YADP;AAEI,IAAA,IAAI,EAAC,MAFT,CAGI;AACA;AAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKEN,KAAK,IAAI,EALX,CAFJ,eASI;AAAO,IAAA,OAAO,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCATJ,eAUI;AACI,IAAA,EAAE,EAAC,iBADP;AAEI,IAAA,IAAI,EAAC,KAFT,CAGI;AAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,eAgBI;AAAO,IAAA,OAAO,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAhBJ,eAiBI;AACI,IAAA,EAAE,EAAC,kBADP;AAEI,IAAA,IAAI,EAAC,kBAFT,CAGI;AAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBJ,eAsBI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,KAAK,EAAC,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAtBJ,CADJ,CADJ;AA+BH","sourcesContent":["import React from 'react'\n\nexport default function Form(props) {\n\n    const { title, youTubeUrl, description } = props.props.todoList;\n\n    console.log('in forms', title, youTubeUrl, description )\n    return (\n        <>\n            <form className='form' onSubmit={() => props.submit}>\n                <label htmlFor='todo-title'>Title</label>\n                <input\n                    id='todo-title'\n                    type='text'\n                    // placeholder={props.todolist.title ? props.todolist.title : 'undefined'}\n                    // onChange={e => props.setTitle(e.target.value)}\n                >{title || ''}</input>\n\n                <label htmlFor='todo-youtubeurl'>YouTube Desktop Application URL</label>\n                <input\n                    id='todo-youtubeurl'\n                    type='url'\n                    // onChange={e => props.setYouTubeUrl(e.target.value)}\n                />\n\n                <label htmlFor='todo-description'>Description</label>\n                <textarea\n                    id='todo-description'\n                    name='todo-description'\n                    // onChange={e => props.setDescription(e.target.value)}\n                />\n                <div className='buttons-div'>\n                    <input type='submit' value='Submit' />\n                    <input type='reset' value='Clear' />\n                </div>\n            </form>\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}