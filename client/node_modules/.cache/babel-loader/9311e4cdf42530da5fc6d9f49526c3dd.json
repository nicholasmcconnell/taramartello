{"ast":null,"code":"import _regeneratorRuntime from\"/Users/nicholasmcconnell/code/todo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/nicholasmcconnell/code/todo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/nicholasmcconnell/code/todo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useContext}from'react';import UserContext from'../../context/UserContext';import API from'../../utils/todoAPI';import ErrorNotice from'../misc/ErrorNotice';import SuccessNotice from'../misc/SuccessNotice';export default function Form(props){var _props$props$todoList=props.props.todoList,_id=_props$props$todoList._id,title=_props$props$todoList.title,youTubeUrl=_props$props$todoList.youTubeUrl,description=_props$props$todoList.description;var _useState=useState(),_useState2=_slicedToArray(_useState,2),titleUpdate=_useState2[0],setTitleUpdate=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),youTubeUrlUpdate=_useState4[0],setYouTubeUrlUpdate=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),descriptionUpdate=_useState6[0],setDescriptionUpdate=_useState6[1];var _useState7=useState(),_useState8=_slicedToArray(_useState7,2),error=_useState8[0],setError=_useState8[1];var _useContext=useContext(UserContext),userData=_useContext.userData;// useEffect(() => {\n//     setTitleUpdate(title);\n// })\nvar submit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var updateTodo;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();_context.prev=1;updateTodo={title:!titleUpdate?description:titleUpdate,youTubeUrl:!youTubeUrlUpdate?youTubeUrl:youTubeUrlUpdate,description:!descriptionUpdate?description:descriptionUpdate};_context.next=5;return API.updateTodo(updateTodo,userData.token,_id).then(function(res){return props.setTodoSuccess(\"Success, \".concat(userData.user.displayName,\"!  Your Todo has been saved.\"));}).catch(function(err){return err.response.data.msg&&setError(err.response.data.msg);});case 5:_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](1);console.log(_context.t0);case 10:case\"end\":return _context.stop();}}},_callee,null,[[1,7]]);}));return function submit(_x){return _ref.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},error&&/*#__PURE__*/React.createElement(ErrorNotice,{message:error,clearError:function clearError(){return setError(undefined);}}),props.todoSuccess&&/*#__PURE__*/React.createElement(SuccessNotice,{message:props.todoSuccess,clearSuccess:function clearSuccess(){props.setTodoSuccess(undefined);}}),/*#__PURE__*/React.createElement(\"form\",{className:\"form\",onSubmit:submit},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"todo-title\"},\"Title\"),/*#__PURE__*/React.createElement(\"input\",{id:\"todo-title\",type:\"text\",defaultValue:title,onChange:function onChange(e){return setTitleUpdate(e.target.value);}}),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"todo-youtubeurl\"},\"YouTube URL\"),/*#__PURE__*/React.createElement(\"input\",{id:\"todo-youtubeurl\",type:\"url\",defaultValue:youTubeUrl,onChange:function onChange(e){return setYouTubeUrlUpdate(e.target.value);}}),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"todo-description\"},\"Description\"),/*#__PURE__*/React.createElement(\"textarea\",{id:\"todo-description\",name:\"todo-description\",defaultValue:description,onChange:function onChange(e){return setDescriptionUpdate(e.target.value);}}),/*#__PURE__*/React.createElement(\"div\",{className:\"buttons-div\"},/*#__PURE__*/React.createElement(\"input\",{type:\"submit\",value:\"Submit\"}),/*#__PURE__*/React.createElement(\"input\",{type:\"reset\",value:\"Clear\"})))));}","map":{"version":3,"sources":["/Users/nicholasmcconnell/code/todo/client/src/components/layout/UpdateForm.js"],"names":["React","useState","useEffect","useContext","UserContext","API","ErrorNotice","SuccessNotice","Form","props","todoList","_id","title","youTubeUrl","description","titleUpdate","setTitleUpdate","youTubeUrlUpdate","setYouTubeUrlUpdate","descriptionUpdate","setDescriptionUpdate","error","setError","userData","submit","e","preventDefault","updateTodo","token","then","res","setTodoSuccess","user","displayName","catch","err","response","data","msg","console","log","undefined","todoSuccess","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport UserContext from '../../context/UserContext';\nimport API from '../../utils/todoAPI';\nimport ErrorNotice from '../misc/ErrorNotice';\nimport SuccessNotice from '../misc/SuccessNotice';\n\nexport default function Form(props) {\n\n    const { _id, title, youTubeUrl, description } = props.props.todoList;\n\n    const [titleUpdate, setTitleUpdate] = useState();\n    const [youTubeUrlUpdate, setYouTubeUrlUpdate] = useState();\n    const [descriptionUpdate, setDescriptionUpdate] = useState();\n    const [error, setError] = useState();\n\n    const { userData } = useContext(UserContext);\n\n\n    // useEffect(() => {\n    //     setTitleUpdate(title);\n\n    // })\n\n    const submit = async (e) => {\n        e.preventDefault();\n        try {\n\n            const updateTodo = {\n                title: !titleUpdate ? description : titleUpdate,\n                youTubeUrl: !youTubeUrlUpdate ? youTubeUrl : youTubeUrlUpdate,\n                description: !descriptionUpdate ? description : descriptionUpdate\n            }\n\n            await API.updateTodo(updateTodo, userData.token, _id)\n                .then(res => props.setTodoSuccess(`Success, ${userData.user.displayName}!  Your Todo has been saved.`))\n                .catch(err =>\n                    (err.response.data.msg && setError(err.response.data.msg))\n                )\n\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    return (\n        <>\n            <div className='container'>\n                {error && (\n                    <ErrorNotice message={error} clearError={() => setError(undefined)} />\n                )}\n\n                {props.todoSuccess && (\n                    <SuccessNotice message={props.todoSuccess} clearSuccess={() => {\n                        props.setTodoSuccess(undefined);\n                    }\n                    } />\n                )}\n                <form className='form' onSubmit={submit}>\n                    <label htmlFor='todo-title'>Title</label>\n                    <input\n                        id='todo-title'\n                        type='text'\n                        defaultValue={title}\n                        onChange={e => setTitleUpdate(e.target.value)}\n                    ></input>\n\n                    <label htmlFor='todo-youtubeurl'>YouTube URL</label>\n                    <input\n                        id='todo-youtubeurl'\n                        type='url'\n                        defaultValue={youTubeUrl}\n                        onChange={e => setYouTubeUrlUpdate(e.target.value)}\n                    />\n\n                    <label htmlFor='todo-description'>Description</label>\n                    <textarea\n                        id='todo-description'\n                        name='todo-description'\n                        defaultValue={description}\n                        onChange={e => setDescriptionUpdate(e.target.value)}\n\n                    />\n                    <div className='buttons-div'>\n                        <input type='submit' value='Submit' />\n                        <input type='reset' value='Clear' />\n                    </div>\n                </form>\n            </div>\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}