{"ast":null,"code":"var _jsxFileName = \"/Users/nicholasmcconnell/code/todo/client/src/components/layout/UpdateForm.js\";\nimport React, { useState, useEffect } from 'react';\nexport default function Form(props) {\n  const {\n    title,\n    youTubeUrl,\n    description\n  } = props.props.todoList;\n  const [titleUpdate, setTitleUpdate] = useState(''); // const [youTubeUrl, setYouTubeUrl] = useState();\n  // const [description, setDescription] = useState();\n  // const [error, setError] = useState();\n  // const [todoSuccess, setTodoSuccess] = useState();\n  // useEffect(() => {\n  //     setTitleUpdate(title);\n  // })\n\n  const handleInputChange = value => {\n    // e.preventDefault();\n    console.log(value); // const { value } = e.target;\n    // setTitleUpdate(value);\n  };\n\n  handleInputChange = titleUpdate.bind(title);\n\n  const submit = async e => {\n    console.log('in on submit');\n    e.preventDefault();\n\n    try {\n      // const updateTodo = { title, youTubeUrl, description }\n      console.log(titleUpdate); //     await API.createTodos(updateTodo, userData.token)\n      //         .then(res => setTodoSuccess(`Success, ${userData.user.displayName}!  Your Todo has been saved.`))\n      //         // .then API.get\n      //         .catch(err =>\n      //             (err.response.data.msg && setError(err.response.data.msg))\n      //         )\n    } catch (err) {\n      console.log(\"something when wrong\");\n    }\n  }; // console.log('in forms', title, youTubeUrl, description )\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"todo-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"todo-title\",\n    type: \"text\",\n    value: title,\n    onChange: e => handleInputChange({\n      value: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"reset\",\n    value: \"Clear\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/nicholasmcconnell/code/todo/client/src/components/layout/UpdateForm.js"],"names":["React","useState","useEffect","Form","props","title","youTubeUrl","description","todoList","titleUpdate","setTitleUpdate","handleInputChange","value","console","log","bind","submit","e","preventDefault","err","target"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAEhC,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,UAAT;AAAqBC,IAAAA;AAArB,MAAqCH,KAAK,CAACA,KAAN,CAAYI,QAAvD;AAEA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,EAAD,CAA9C,CAJgC,CAKhC;AACA;AACA;AACA;AAGA;AACA;AAEA;;AAEA,QAAMU,iBAAiB,GAAGC,KAAK,IAAI;AAC/B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAF+B,CAG/B;AACA;AACD,GALH;;AAOED,EAAAA,iBAAiB,GAAGF,WAAW,CAACM,IAAZ,CAAiBV,KAAjB,CAApB;;AAEF,QAAMW,MAAM,GAAG,MAAOC,CAAP,IAAa;AACxBJ,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAG,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI;AACA;AAEAL,MAAAA,OAAO,CAACC,GAAR,CAAYL,WAAZ,EAHA,CAKA;AACA;AACA;AACA;AACA;AACA;AAEH,KAZD,CAYE,OAAOU,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACH;AACJ,GAlBD,CAzBgC,CA6ChC;;;AACA,sBACI,uDAEI;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAuB,IAAA,QAAQ,EAAEE,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI;AACI,IAAA,EAAE,EAAC,YADP;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,KAAK,EAAEX,KAHX;AAII,IAAA,QAAQ,EAAEY,CAAC,IAAIN,iBAAiB,CAAC;AAACC,MAAAA,KAAK,EAAEK,CAAC,CAACG,MAAF,CAASR;AAAjB,KAAD,CAJpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAwBI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,KAAK,EAAC,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAxBJ,CAFJ,CADJ;AAkCH","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nexport default function Form(props) {\n\n    const { title, youTubeUrl, description } = props.props.todoList;\n\n    const [titleUpdate, setTitleUpdate] = useState('');\n    // const [youTubeUrl, setYouTubeUrl] = useState();\n    // const [description, setDescription] = useState();\n    // const [error, setError] = useState();\n    // const [todoSuccess, setTodoSuccess] = useState();\n\n\n    // useEffect(() => {\n    //     setTitleUpdate(title);\n\n    // })\n\n    const handleInputChange = value => {\n        // e.preventDefault();\n        console.log(value);\n        // const { value } = e.target;\n        // setTitleUpdate(value);\n      }\n\n      handleInputChange = titleUpdate.bind(title)\n\n    const submit = async (e) => {\n        console.log('in on submit')\n        e.preventDefault();\n        try {\n            // const updateTodo = { title, youTubeUrl, description }\n\n            console.log(titleUpdate);\n\n            //     await API.createTodos(updateTodo, userData.token)\n            //         .then(res => setTodoSuccess(`Success, ${userData.user.displayName}!  Your Todo has been saved.`))\n            //         // .then API.get\n            //         .catch(err =>\n            //             (err.response.data.msg && setError(err.response.data.msg))\n            //         )\n\n        } catch (err) {\n            console.log(\"something when wrong\")\n        }\n    }\n\n    // console.log('in forms', title, youTubeUrl, description )\n    return (\n        <>\n            {/* {console.log(typeof title)} */}\n            <form className='form' onSubmit={submit}>\n                <label htmlFor='todo-title'>Title</label>\n                <input\n                    id='todo-title'\n                    type='text'\n                    value={title}\n                    onChange={e => handleInputChange({value: e.target.value})}\n                ></input>\n\n                {/* <label htmlFor='todo-youtubeurl'>YouTube Desktop Application URL</label>\n                <input\n                    id='todo-youtubeurl'\n                    type='url'\n                    value={youTubeUrl}\n                onChange={e => props.setYouTubeUrl(e.target.value)}\n                /> */}\n\n                {/* <label htmlFor='todo-description'>Description</label>\n                <textarea\n                    id='todo-description'\n                    name='todo-description'\n                    value={description}\n                onChange={e => props.setDescription(e.target.value)} \n                /> */}\n                <div className='buttons-div'>\n                    <input type='submit' value='Submit' />\n                    <input type='reset' value='Clear' />\n                </div>\n            </form>\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}