{"ast":null,"code":"import _slicedToArray from\"/Users/nicholasmcconnell/code/todo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import Modal from'../layout/Modal';export default function Card(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),toggle=_useState2[0],setToggle=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),show=_useState4[0],setShow=_useState4[1];var showModal=function showModal(){setShow(true);};var hideModal=function hideModal(){setShow(false);};var youTubeURL=props.todoList.youTubeUrl;var urlArray=youTubeURL.split(youTubeURL.charAt(youTubeURL.length-12));var youTubeId=urlArray[urlArray.length-1];return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"card-body\"},/*#__PURE__*/React.createElement(\"h3\",{className:\"card-title\"},props.todoList.title),/*#__PURE__*/React.createElement(\"p\",{className:\"card-description\"},props.todoList.description),/*#__PURE__*/React.createElement(\"div\",{className:\"video\",style:{position:\"relative\",paddingBottom:\"56.25%\"/* 16:9 */,paddingTop:25,height:0,color:'red'}},/*#__PURE__*/React.createElement(\"iframe\",{style:{position:\"absolute\",top:0,left:0,width:\"100%\",height:\"100%\"},src:\"https://www.youtube.com/embed/\".concat(youTubeId),frameBorder:\"0\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"buttons-div\"},/*#__PURE__*/React.createElement(Modal,{show:show,handleClose:hideModal,todoList:props.todoList,getTodos:props.getTodos}),/*#__PURE__*/React.createElement(\"button\",{className:\"todo-card-button\",onClick:showModal},\"Edit\"),/*#__PURE__*/React.createElement(\"button\",{className:\"todo-card-button\",onClick:function onClick(){return props.deleteTodos(props.todoList._id);}},\"Delete\"))));}","map":{"version":3,"sources":["/Users/nicholasmcconnell/code/todo/client/src/components/layout/Card.js"],"names":["React","useState","Modal","Card","props","toggle","setToggle","show","setShow","showModal","hideModal","youTubeURL","todoList","youTubeUrl","urlArray","split","charAt","length","youTubeId","title","description","position","paddingBottom","paddingTop","height","color","top","left","width","getTodos","deleteTodos","_id"],"mappings":"gKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,KAAP,KAAkB,iBAAlB,CAEA,cAAe,SAASC,CAAAA,IAAT,CAAcC,KAAd,CAAqB,eAEJH,QAAQ,CAAC,KAAD,CAFJ,wCAEzBI,MAFyB,eAEjBC,SAFiB,8BAGRL,QAAQ,CAAC,KAAD,CAHA,yCAGzBM,IAHyB,eAGnBC,OAHmB,eAKhC,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACpBD,OAAO,CAAC,IAAD,CAAP,CACH,CAFD,CAIA,GAAME,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACpBF,OAAO,CAAC,KAAD,CAAP,CACH,CAFD,CAIA,GAAMG,CAAAA,UAAU,CAAGP,KAAK,CAACQ,QAAN,CAAeC,UAAlC,CACA,GAAMC,CAAAA,QAAQ,CAAIH,UAAU,CAACI,KAAX,CAAiBJ,UAAU,CAACK,MAAX,CAAkBL,UAAU,CAACM,MAAX,CAAoB,EAAtC,CAAjB,CAAlB,CACA,GAAMC,CAAAA,SAAS,CAAGJ,QAAQ,CAACA,QAAQ,CAACG,MAAT,CAAgB,CAAjB,CAA1B,CAEA,mBACI,qDAGI,2BAAK,SAAS,CAAC,WAAf,eACI,0BAAI,SAAS,CAAC,YAAd,EAA4Bb,KAAK,CAACQ,QAAN,CAAeO,KAA3C,CADJ,cAEI,yBAAG,SAAS,CAAC,kBAAb,EAAiCf,KAAK,CAACQ,QAAN,CAAeQ,WAAhD,CAFJ,cAGI,2BACI,SAAS,CAAC,OADd,CAEI,KAAK,CAAE,CACHC,QAAQ,CAAE,UADP,CAEHC,aAAa,CAAE,QAAS,UAFrB,CAGHC,UAAU,CAAE,EAHT,CAIHC,MAAM,CAAE,CAJL,CAKHC,KAAK,CAAE,KALJ,CAFX,eAWI,8BACI,KAAK,CAAE,CACHJ,QAAQ,CAAE,UADP,CAEHK,GAAG,CAAE,CAFF,CAGHC,IAAI,CAAE,CAHH,CAIHC,KAAK,CAAE,MAJJ,CAKHJ,MAAM,CAAE,MALL,CADX,CAQI,GAAG,yCAAmCN,SAAnC,CARP,CASI,WAAW,CAAC,GAThB,EAXJ,CAHJ,cA4BI,2BAAK,SAAS,CAAC,aAAf,eACI,oBAAC,KAAD,EACI,IAAI,CAAEX,IADV,CAEI,WAAW,CAAEG,SAFjB,CAGI,QAAQ,CAAEN,KAAK,CAACQ,QAHpB,CAII,QAAQ,CAAER,KAAK,CAACyB,QAJpB,EADJ,cASI,8BAAQ,SAAS,CAAC,kBAAlB,CAAqC,OAAO,CAAEpB,SAA9C,SATJ,cAUI,8BAAQ,SAAS,CAAC,kBAAlB,CAAqC,OAAO,CAAE,yBAAML,CAAAA,KAAK,CAAC0B,WAAN,CAAkB1B,KAAK,CAACQ,QAAN,CAAemB,GAAjC,CAAN,EAA9C,WAVJ,CA5BJ,CAHJ,CADJ,CA+CH","sourcesContent":["import React, { useState } from 'react';\nimport Modal from '../layout/Modal';\n\nexport default function Card(props) {\n\n    const [toggle, setToggle] = useState(false);\n    const [show, setShow] = useState(false)\n\n    const showModal = () => {\n        setShow(true)\n    }\n\n    const hideModal = () => {\n        setShow(false)\n    }\n\n    const youTubeURL = props.todoList.youTubeUrl;\n    const urlArray = (youTubeURL.split(youTubeURL.charAt(youTubeURL.length - 12)))\n    const youTubeId = urlArray[urlArray.length-1];\n\n    return (\n        <>\n            {/* {toggle && <Modal />} */}\n\n            <div className='card-body'>\n                <h3 className='card-title'>{props.todoList.title}</h3>\n                <p className='card-description'>{props.todoList.description}</p>\n                <div\n                    className=\"video\"\n                    style={{\n                        position: \"relative\",\n                        paddingBottom: \"56.25%\" /* 16:9 */,\n                        paddingTop: 25,\n                        height: 0,\n                        color: 'red'\n\n                    }}\n                >\n                    <iframe\n                        style={{\n                            position: \"absolute\",\n                            top: 0,\n                            left: 0,\n                            width: \"100%\",\n                            height: \"100%\",\n                        }}\n                        src={`https://www.youtube.com/embed/${youTubeId}`}\n                        frameBorder=\"0\"\n                    />\n                </div>\n\n\n                <div className='buttons-div'>\n                    <Modal\n                        show={show}\n                        handleClose={hideModal}\n                        todoList={props.todoList}\n                        getTodos={props.getTodos}\n                    >\n                    </Modal>\n\n                    <button className='todo-card-button' onClick={showModal}>Edit</button>\n                    <button className='todo-card-button' onClick={() => props.deleteTodos(props.todoList._id)}>Delete</button>\n                </div>\n            </div>\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}