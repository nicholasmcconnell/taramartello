{"ast":null,"code":"import _regeneratorRuntime from\"/Users/nicholasmcconnell/code/todo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/nicholasmcconnell/code/todo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/nicholasmcconnell/code/todo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext,useEffect}from'react';import{useHistory,Link}from'react-router-dom';import UserContext from'../../context/UserContext';import API from'../../utils/todoAPI';import ErrorNotice from'../misc/ErrorNotice';export default function CreateTodos(){var _useState=useState(),_useState2=_slicedToArray(_useState,2),title=_useState2[0],setTitle=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),youTubeUrl=_useState4[0],setYouTubeUrl=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),description=_useState6[0],setDescription=_useState6[1];var _useState7=useState(),_useState8=_slicedToArray(_useState7,2),error=_useState8[0],setError=_useState8[1];var _useContext=useContext(UserContext),userData=_useContext.userData;var history=useHistory();useEffect(function(){if(!userData.user){history.push('/login');}});var submit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var newTodo;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();_context.prev=1;newTodo={title:title,youTubeUrl:youTubeUrl,description:description};_context.next=5;return API.createTodos(newTodo,userData.token).then(function(res){return console.log('success',res.data);}).catch(function(err){return err.response.data.msg&&setError(err.response.data.msg);});case 5:_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](1);console.log(_context.t0);case 10:case\"end\":return _context.stop();}}},_callee,null,[[1,7]]);}));return function submit(_x){return _ref.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(\"div\",{className:\"page\"},/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},/*#__PURE__*/React.createElement(\"h2\",null,\"CreateTodos\"),error&&/*#__PURE__*/React.createElement(ErrorNotice,{message:error,clearError:function clearError(){return setError(undefined);}}),/*#__PURE__*/React.createElement(\"form\",{className:\"form\",onSubmit:submit},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"todo-title\"},\"Title\"),/*#__PURE__*/React.createElement(\"input\",{id:\"todo-title\",type:\"text\",onChange:function onChange(e){return setTitle(e.target.value);}}),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"todo-youtubeurl\"},\"YouTube URL\"),/*#__PURE__*/React.createElement(\"input\",{id:\"todo-youtubeurl\",type:\"url\",onChange:function onChange(e){return setYouTubeUrl(e.target.value);}}),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"todo-description\"},\"Description\"),/*#__PURE__*/React.createElement(\"textarea\",{id:\"todo-description\",name:\"todo-description\",onChange:function onChange(e){return setDescription(e.target.value);}}),/*#__PURE__*/React.createElement(\"input\",{type:\"submit\",value:\"Submit\"})),/*#__PURE__*/React.createElement(Link,{to:\"/\"},/*#__PURE__*/React.createElement(\"button\",{className:\"type-button\",value:\"Home\"},\"Home\"))));}","map":{"version":3,"sources":["/Users/nicholasmcconnell/code/todo/client/src/components/todo/CreateTodos.js"],"names":["React","useState","useContext","useEffect","useHistory","Link","UserContext","API","ErrorNotice","CreateTodos","title","setTitle","youTubeUrl","setYouTubeUrl","description","setDescription","error","setError","userData","history","user","push","submit","e","preventDefault","newTodo","createTodos","token","then","res","console","log","data","catch","err","response","msg","undefined","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react'\nimport { useHistory, Link } from 'react-router-dom';\nimport UserContext from '../../context/UserContext';\nimport API from '../../utils/todoAPI';\nimport ErrorNotice from '../misc/ErrorNotice';\n\nexport default function CreateTodos() {\n\n    const [title, setTitle] = useState();\n    const [youTubeUrl, setYouTubeUrl] = useState();\n    const [description, setDescription] = useState();\n    const [error, setError] = useState();\n\n    const { userData } = useContext(UserContext);\n    const history = useHistory();\n\n    useEffect(() => {\n        if (!userData.user) {\n            history.push('/login')\n        }\n    });\n\n    const submit = async (e) => {\n        e.preventDefault();\n        try {\n            const newTodo = { title, youTubeUrl, description }\n\n            await API.createTodos(newTodo, userData.token)\n                .then(res => console.log('success', res.data))\n                .catch(err =>\n                    (err.response.data.msg && setError(err.response.data.msg))\n                )\n\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    return (\n        <div className='page'>\n            <div className='container'>\n                <h2>CreateTodos</h2>\n                {error && (\n                    <ErrorNotice message={error} clearError={() => setError(undefined)} />\n                    )}\n                <form className='form' onSubmit={submit}>\n                    <label htmlFor='todo-title'>Title</label>\n                    <input\n                        id='todo-title'\n                        type='text'\n                        onChange={e => setTitle(e.target.value)}\n                    />\n\n                    <label htmlFor='todo-youtubeurl'>YouTube URL</label>\n                    <input\n                        id='todo-youtubeurl'\n                        type='url'\n                        onChange={e => setYouTubeUrl(e.target.value)}\n                    />\n\n                    <label htmlFor='todo-description'>Description</label>\n                    <textarea\n                        id='todo-description'\n                        name='todo-description'\n                        onChange={e => setDescription(e.target.value)}\n                    />\n                    {/* <div className='buttons-div'> */}\n                    <input type='submit' value='Submit' />\n\n                    {/* </div> */}\n                </form>\n                <Link to='/'>\n                    <button className='type-button' value='Home'>Home</button>\n                </Link>\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}