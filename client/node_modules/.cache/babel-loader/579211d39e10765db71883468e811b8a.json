{"ast":null,"code":"var _jsxFileName = \"/Users/nicholasmcconnell/code/todo/client/src/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport UserContext from './context/UserContext';\nimport * as serviceWorker from './serviceWorker';\nconsole.log('index.js 7373478');\nconst [userData, setUserData] = useState({\n  token: undefined,\n  user: undefined\n});\nconst history = useHistory();\nconsole.log('1', userData);\nuseEffect(() => {\n  const checkLoggedIn = async () => {\n    let token = localStorage.getItem(\"auth-token\");\n\n    if (token === null) {\n      localStorage.setItem('auth-token', '');\n      token = '';\n      return;\n    }\n\n    const tokenRes = await Axios.post('/api/users/tokenIsValid', null, {\n      headers: {\n        'x-auth-token': token\n      }\n    });\n\n    if (tokenRes.data) {\n      const userRes = await Axios.get('/api/users/', {\n        headers: {\n          'x-auth-token': token\n        }\n      });\n      setUserData({\n        token,\n        user: userRes.data\n      });\n    }\n  };\n\n  checkLoggedIn();\n}, []);\nReactDOM.render( /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(UserContext.Provider, {\n  value: {\n    userData,\n    setUserData\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }\n}))), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/nicholasmcconnell/code/todo/client/src/index.js"],"names":["React","useState","useEffect","useHistory","ReactDOM","App","UserContext","serviceWorker","console","log","userData","setUserData","token","undefined","user","history","checkLoggedIn","localStorage","getItem","setItem","tokenRes","Axios","post","headers","data","userRes","get","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AAEAC,OAAO,CAACC,GAAR,CAAY,kBAAZ;AAEA,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC;AACvCW,EAAAA,KAAK,EAAEC,SADgC;AAEvCC,EAAAA,IAAI,EAAED;AAFiC,CAAD,CAAxC;AAKA,MAAME,OAAO,GAAGZ,UAAU,EAA1B;AAEAK,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBC,QAAjB;AAEAR,SAAS,CAAC,MAAM;AACd,QAAMc,aAAa,GAAG,YAAY;AAChC,QAAIJ,KAAK,GAAGK,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAZ;;AACA,QAAIN,KAAK,KAAK,IAAd,EAAoB;AAClBK,MAAAA,YAAY,CAACE,OAAb,CAAqB,YAArB,EAAmC,EAAnC;AACAP,MAAAA,KAAK,GAAG,EAAR;AACA;AACD;;AAED,UAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAACC,IAAN,CACrB,yBADqB,EAErB,IAFqB,EAGrB;AAAEC,MAAAA,OAAO,EAAE;AAAE,wBAAgBX;AAAlB;AAAX,KAHqB,CAAvB;;AAKA,QAAIQ,QAAQ,CAACI,IAAb,EAAmB;AACjB,YAAMC,OAAO,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAU,aAAV,EAAyB;AAC7CH,QAAAA,OAAO,EAAE;AAAE,0BAAgBX;AAAlB;AADoC,OAAzB,CAAtB;AAGAD,MAAAA,WAAW,CAAC;AACVC,QAAAA,KADU;AAEVE,QAAAA,IAAI,EAAEW,OAAO,CAACD;AAFJ,OAAD,CAAX;AAID;AACF,GAtBD;;AAuBAR,EAAAA,aAAa;AACd,CAzBQ,EAyBN,EAzBM,CAAT;AA2BAZ,QAAQ,CAACuB,MAAT,eACE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,EAAA,KAAK,EAAE;AAAEjB,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADA,CADF,CADF,EAQEiB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CARF,E,CAWA;AACA;AACA;;AACAtB,aAAa,CAACuB,UAAd","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport UserContext from './context/UserContext';\nimport * as serviceWorker from './serviceWorker';\n\nconsole.log('index.js 7373478')\n\nconst [userData, setUserData] = useState({\n  token: undefined,\n  user: undefined\n})\n\nconst history = useHistory();\n\nconsole.log('1', userData)\n\nuseEffect(() => {\n  const checkLoggedIn = async () => {\n    let token = localStorage.getItem(\"auth-token\");\n    if (token === null) {\n      localStorage.setItem('auth-token', '');\n      token = '';\n      return;\n    }\n\n    const tokenRes = await Axios.post(\n      '/api/users/tokenIsValid',\n      null,\n      { headers: { 'x-auth-token': token } }\n    );\n    if (tokenRes.data) {\n      const userRes = await Axios.get('/api/users/', {\n        headers: { 'x-auth-token': token }\n      });\n      setUserData({\n        token,\n        user: userRes.data\n      })\n    }\n  };\n  checkLoggedIn();\n}, [])\n\nReactDOM.render(\n  <React.StrictMode>\n    <UserContext.Provider value={{ userData, setUserData }}>\n    <App />\n\n    </UserContext.Provider>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}