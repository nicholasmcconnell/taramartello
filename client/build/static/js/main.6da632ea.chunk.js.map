{"version":3,"sources":["assets/images/TaraName.png","assets/images/whatIOffer.png","context/UserContext.js","components/layout/Header.js","components/misc/ErrorNotice.js","components/auth/Login.js","components/auth/Register.js","components/layout/LandingImage.js","components/pages/Landing.js","components/layout/EmailSignup.js","components/layout/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","createContext","Header","id","to","className","ErrorNotice","props","message","onClick","clearError","Login","useState","email","setEmail","password","setPassword","error","setError","useContext","UserContext","userData","setUserData","history","useHistory","useEffect","lastVisited","localStorage","getItem","user","push","submit","e","a","preventDefault","loginUser","Axios","post","loginRes","token","data","setItem","response","msg","undefined","onSubmit","htmlFor","type","onChange","target","value","Register","passwordCheck","setpasswordCheckl","displayName","setDisplayName","newUser","placeholder","LandingImage","src","image","Home","TaraName","TaraOffer","EmailSignup","action","method","name","novalidate","style","position","left","aria-hidden","tabindex","class","Footer","href","App","Provider","exact","path","component","Landing","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"kHAAAA,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,wC,+MCE5BC,0BAAc,M,iBCGd,SAASC,IAGpB,OACI,4BAAQC,GAAG,UACP,kBAAC,IAAD,CAAMC,GAAG,KACL,wBAAIC,UAAU,SAAd,mB,qBCTD,SAASC,EAAYC,GAChC,OACI,yBAAKF,UAAU,gBACX,8BAAOE,EAAMC,SACb,4BAAQC,QAASF,EAAMG,YAAvB,MCAG,SAASC,IAAS,IAAD,EACFC,qBADE,mBACrBC,EADqB,KACdC,EADc,OAEIF,qBAFJ,mBAErBG,EAFqB,KAEXC,EAFW,OAGFJ,qBAHE,mBAGrBK,EAHqB,KAGdC,EAHc,OAKMC,qBAAWC,GAArCC,EALoB,EAKpBA,SAAUC,EALU,EAKVA,YACZC,EAAUC,cAEhBC,qBAAU,WACN,IAAMC,EAAcC,aAAaC,QAAQ,eACrCP,EAASQ,MACTN,EAAQO,KAAKJ,MAIrB,IAAMK,EAAM,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,6DACXD,EAAEE,iBADS,SAGDC,EAAY,CAAEtB,QAAOE,YAHpB,SAIgBqB,IAAMC,KACzB,mBACAF,GANG,OAIDG,EAJC,OASPhB,EAAY,CACRiB,MAAOD,EAASE,KAAKD,MACrBV,KAAMS,EAASE,KAAKX,OAGxBF,aAAac,QAAQ,aAAcH,EAASE,KAAKD,OACjDhB,EAAQO,KAAK,KAfN,kDAiBN,KAAIY,SAASF,KAAKG,KAAOzB,EAAS,KAAIwB,SAASF,KAAKG,KAjB9C,0DAAH,sDAsBZ,OACI,yBAAKtC,UAAU,QACX,yBAAKA,UAAU,aACX,qCACCY,GACG,kBAACX,EAAD,CAAaE,QAASS,EAAOP,WAAY,kBAAMQ,OAAS0B,MAE5D,0BAAMvC,UAAU,OAAOwC,SAAUd,GAC7B,2BAAOe,QAAQ,eAAf,SACA,2BACI3C,GAAG,cACH4C,KAAK,QACLC,SAAU,SAAAhB,GAAC,OAAIlB,EAASkB,EAAEiB,OAAOC,UAGrC,2BAAOJ,QAAQ,kBAAf,YACA,2BACI3C,GAAG,iBACH4C,KAAK,WACLC,SAAU,SAAAhB,GAAC,OAAIhB,EAAYgB,EAAEiB,OAAOC,UAGxC,2BAAOH,KAAK,SAASG,MAAM,cC3DhC,SAASC,IAAY,IAAD,EAELvC,qBAFK,mBAExBC,EAFwB,KAEjBC,EAFiB,OAGCF,qBAHD,mBAGxBG,EAHwB,KAGdC,EAHc,OAIYJ,qBAJZ,mBAIxBwC,EAJwB,KAITC,EAJS,OAKOzC,qBALP,mBAKxB0C,EALwB,KAKXC,EALW,OAML3C,qBANK,mBAMxBK,EANwB,KAMjBC,EANiB,KAQvBI,EAAgBH,qBAAWC,GAA3BE,YACFC,EAAUC,cAEVO,EAAM,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,6DACXD,EAAEE,iBADS,SAGDsB,EAAU,CAAE3C,QAAOE,WAAUqC,gBAAeE,eAH3C,SAIDlB,IAAMC,KACR,sBACAmB,GANG,uBAQgBpB,IAAMC,KAAK,mBAAoB,CAClDxB,QACAE,aAVG,OAQDuB,EARC,OAaPhB,EAAY,CACRiB,MAAOD,EAASE,KAAKD,MACrBV,KAAMS,EAASE,KAAKX,OAGxBF,aAAac,QAAQ,aAAcH,EAASE,KAAKD,OACjDhB,EAAQO,KAAK,KAnBN,kDAqBP,KAAIY,SAASF,KAAKG,KAAOzB,EAAS,KAAIwB,SAASF,KAAKG,KArB7C,0DAAH,sDAyBZ,OACI,yBAAKtC,UAAU,QACX,yBAAKA,UAAU,aACX,wCACCY,GACG,kBAACX,EAAD,CAAaE,QAASS,EAAOP,WAAY,kBAAMQ,OAAS0B,MAE5D,0BAAMvC,UAAU,OAAOwC,SAAUd,GAC7B,2BAAOe,QAAQ,kBAAf,SACA,2BACI3C,GAAG,iBACH4C,KAAK,QACLC,SAAU,SAAAhB,GAAC,OAAIlB,EAASkB,EAAEiB,OAAOC,UAGrC,2BAAOJ,QAAQ,qBAAf,YACA,2BACI3C,GAAG,oBACH4C,KAAK,WACLC,SAAU,SAAAhB,GAAC,OAAIhB,EAAYgB,EAAEiB,OAAOC,UAExC,2BACIH,KAAK,WACLU,YAAY,kBACZT,SAAU,SAAAhB,GAAC,OAAIqB,EAAkBrB,EAAEiB,OAAOC,UAG9C,2BAAOJ,QAAQ,yBAAf,gBACA,2BACI3C,GAAG,wBACH4C,KAAK,OACLC,SAAU,SAAAhB,GAAC,OAAIuB,EAAevB,EAAEiB,OAAOC,UAG3C,2BAAOH,KAAK,SAASG,MAAM,gBCzEhC,SAASQ,EAAanD,GACjC,OACI,yBAAKF,UAAU,uBACX,yBAAKA,UAAU,YAAYsD,IAAKpD,EAAMqD,QAD1C,K,qBCiCOC,MA5Bf,WAaI,OAZqB1C,qBAAWC,GAAxBC,SACQG,cAEhBC,qBAAU,WAENE,aAAac,QAAQ,cAAe,OAQpC,oCAEI,kBAACiB,EAAD,CACIE,MAAOE,MAEV,kBAACJ,EAAD,CACGE,MAAOG,QC5BR,SAASC,IAAe,IAAD,EACRpD,qBADQ,mBAC3BC,EAD2B,KACpBC,EADoB,KASlC,OACI,oCAEI,0BAAMmD,OAAO,qGAAyGC,OAAO,OAAO/D,GAAG,6BAA6BgE,KAAK,6BAA6B9D,UAAU,sBAAsB4C,OAAO,SAASmB,YAAU,GAC5P,0DAEA,yBAAKjE,GAAG,0BAEJ,2BACI4C,KAAK,QACLG,MAAOrC,EACPsD,KAAK,QACL9D,UAAU,QACVF,GAAG,YACHsD,YAAY,cAEZT,SAAU,SAAAhB,GAAC,OAAIlB,EAASkB,EAAEiB,OAAOC,UAErC,yBAAKmB,MAAO,CAAEC,SAAU,WAAYC,KAAM,WAAaC,cAAY,QAC/D,2BAAOzB,KAAK,OAAOoB,KAAK,yCAAyCM,SAAS,KAAKvB,MAAM,MAIzF,2BAAOH,KAAK,SAASG,MAAM,YAAYiB,KAAK,YAAYhE,GAAG,wBAAwBuE,MAAM,cC/B9F,SAASC,IACpB,OAEI,4BAAQtE,UAAU,SAASF,GAAG,UAOtB,kBAAC6D,EAAD,MACA,yBAAK3D,UAAU,SACX,uBAAGuE,KAAK,iDAAiD3B,OAAO,UAAS,uBAAG5C,UAAU,4BACtF,uBAAGuE,KAAK,2CAA2C3B,OAAO,UAAS,uBAAG5C,UAAU,2BAChF,uBAAGuE,KAAK,mCAAmC3B,OAAO,UAAS,uBAAG5C,UAAU,4B,MC8D7EwE,MA7Df,WAAgB,IAAD,EACmBjE,mBAAS,CACvC2B,WAAOK,EACPf,UAAMe,IAHK,mBACNvB,EADM,KACIC,EADJ,KAoCb,OA9BgBE,cAEhBC,qBAAU,cA0BP,IAGD,yBAAKpB,UAAU,kBACb,kBAAC,IAAD,KACE,kBAACe,EAAY0D,SAAb,CAAsB5B,MAAO,CAAE7B,WAAUC,gBAEvC,kBAACpB,EAAD,MAEA,kBAAC,IAAD,KAEE,kBAAC,IAAD,CAAO6E,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjC,kBAAC,IAAD,CAAOF,KAAK,SAASC,UAAWtE,IAChC,kBAAC,IAAD,CAAOqE,KAAK,YAAYC,UAAW9B,KAOrC,kBAACwB,EAAD,UC5DUQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAlF,GACLmF,QAAQnF,MAAMA,EAAMT,c","file":"static/js/main.6da632ea.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/TaraName.2d6fc5f2.png\";","module.exports = __webpack_public_path__ + \"static/media/whatIOffer.fbfa456c.png\";","import { createContext } from 'react';\n\nexport default createContext(null);","import React, { useContext } from 'react'\nimport { Link } from 'react-router-dom';\nimport UserContext from '../../context/UserContext';\nimport AuthOptions from '../auth/AuthOptions';\n\nexport default function Header() {\n    // const { userData } = useContext(UserContext);\n\n    return (\n        <header id='header'>\n            <Link to='/'>\n                <h1 className='title'>Tara Martello</h1>\n            </Link>\n\n            {/* <AuthOptions /> */}\n\n        </header>\n    )\n}\n","import React from 'react'\n\nexport default function ErrorNotice(props) {\n    return (\n        <div className='error-notice'>\n            <span>{props.message}</span>\n            <button onClick={props.clearError}>X</button>\n        </div>\n    )\n}\n","import React, { useState, useContext, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport UserContext from '../../context/UserContext';\nimport Axios from 'axios';\nimport ErrorNotice from '../misc/ErrorNotice';\n\nexport default function Login() {\n    const [email, setEmail] = useState();\n    const [password, setPassword] = useState();\n    const [error, setError] = useState();\n\n    const { userData, setUserData } = useContext(UserContext);\n    const history = useHistory();\n\n    useEffect(() => {\n        const lastVisited = localStorage.getItem('lastVisited')\n        if (userData.user) {\n            history.push(lastVisited)\n        }\n    });\n\n    const submit = async (e) => {\n        e.preventDefault();\n        try {\n            const loginUser = { email, password };\n            const loginRes = await Axios.post(\n                '/api/users/login',\n                loginUser\n            );\n\n            setUserData({\n                token: loginRes.data.token,\n                user: loginRes.data.user\n            });\n\n            localStorage.setItem('auth-token', loginRes.data.token);\n            history.push('/');\n        } catch (err) {\n            (err.response.data.msg && setError(err.response.data.msg))\n        }\n\n    }\n\n    return (\n        <div className='page'>\n            <div className='container'>\n                <h2>Login</h2>\n                {error && (\n                    <ErrorNotice message={error} clearError={() => setError(undefined)} />\n                )}\n                <form className='form' onSubmit={submit}>\n                    <label htmlFor='login-email'>Email</label>\n                    <input\n                        id='login-email'\n                        type='email'\n                        onChange={e => setEmail(e.target.value)}\n                    />\n\n                    <label htmlFor='login-password'>Password</label>\n                    <input\n                        id='login-password'\n                        type='password'\n                        onChange={e => setPassword(e.target.value)}\n                    />\n\n                    <input type='submit' value='Log in' />\n\n                </form>\n            </div>\n        </div>\n    )\n}\n","import React, { useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport UserContext from '../../context/UserContext';\nimport Axios from 'axios';\nimport ErrorNotice from '../misc/ErrorNotice';\n\nexport default function Register() {\n\n    const [email, setEmail] = useState();\n    const [password, setPassword] = useState();\n    const [passwordCheck, setpasswordCheckl] = useState();\n    const [displayName, setDisplayName] = useState();\n    const [error, setError] = useState();\n\n    const { setUserData } = useContext(UserContext);\n    const history = useHistory();\n\n    const submit = async (e) => {\n        e.preventDefault();\n        try {\n            const newUser = { email, password, passwordCheck, displayName };\n            await Axios.post(\n                '/api/users/register',\n                newUser\n            );\n            const loginRes = await Axios.post('/api/users/login', {\n                email,\n                password\n            });\n\n            setUserData({\n                token: loginRes.data.token,\n                user: loginRes.data.user\n            });\n\n            localStorage.setItem('auth-token', loginRes.data.token);\n            history.push('/');\n        } catch (err) {\n            err.response.data.msg && setError(err.response.data.msg);\n        }\n\n    }\n    return (\n        <div className='page'>\n            <div className='container'>\n                <h2>Register</h2>\n                {error && (\n                    <ErrorNotice message={error} clearError={() => setError(undefined)} />\n                )}\n                <form className='form' onSubmit={submit}>\n                    <label htmlFor='register-email'>Email</label>\n                    <input\n                        id='register-email'\n                        type='email'\n                        onChange={e => setEmail(e.target.value)}\n                    />\n\n                    <label htmlFor='register-password'>Password</label>\n                    <input\n                        id='register-password'\n                        type='password'\n                        onChange={e => setPassword(e.target.value)}\n                    />\n                    <input\n                        type='password'\n                        placeholder='Verify password'\n                        onChange={e => setpasswordCheckl(e.target.value)}\n                    />\n\n                    <label htmlFor='register-display-name'>Display name</label>\n                    <input\n                        id='register-display-name'\n                        type='text'\n                        onChange={e => setDisplayName(e.target.value)}\n                    />\n\n                    <input type='submit' value='Register' />\n\n                </form>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport TaraName from '../../assets/images/TaraName.png';\n\nexport default function LandingImage(props) {\n    return (\n        <div className=\"landingImgContainer\">\n            <img className=\"taraImage\" src={props.image} />;\n        </div>\n    )\n}\n","import React, { useEffect, useContext } from 'react';\nimport UserContext from '../../context/UserContext';\nimport { useHistory } from 'react-router-dom';\nimport TodoOptions from '../todo/TodoOptions';\nimport LandingImage from '../layout/LandingImage'\nimport TaraName from '../../assets/images/TaraName.png';\nimport TaraOffer from '../../assets/images/whatIOffer.png';\n\n\n\nfunction Home() {\n    const { userData } = useContext(UserContext);\n    const history = useHistory();\n\n    useEffect(() => {\n\n        localStorage.setItem('lastVisited', '');\n\n        // if (!userData.user) {\n        //     history.push('/login')\n        // }\n\n    });\n    return (\n        <>\n            {/* <TodoOptions /> */}\n            <LandingImage\n                image={TaraName}\n            />\n             <LandingImage\n                image={TaraOffer}\n            />\n\n\n        </>\n    )\n}\n\nexport default Home\n\n","import React, { useState } from 'react';\n\nexport default function EmailSignup() {\n    const [email, setEmail] = useState();\n\n    const submit = (e) => {\n        e.preventDefault();\n        console.log(email);\n\n    }\n\n    return (\n        <>\n            {/* <div id=\"mc_embed_signup\"> */}\n            <form action=\"https://taramartello.us17.list-manage.com/subscribe/post?u=388b4c4e898214aaf5d7be920&amp;id=9a1f10895f\" method=\"post\" id=\"mc-embedded-subscribe-form\" name=\"mc-embedded-subscribe-form\" className=\"validate footerform\" target=\"_blank\" novalidate>\n                <h2>Sign up for my Newsletter!</h2>\n                {/* <p>Life, Mindfulness and Love</p> */}\n                <div id=\"mc_embed_signup_scroll\">\n                    {/* <label htmlFor=\"mce-EMAIL\"></label> */}\n                    <input\n                        type=\"email\"\n                        value={email}\n                        name=\"EMAIL\"\n                        className=\"email\"\n                        id=\"mce-EMAIL\"\n                        placeholder=\"Enter email\"\n                        // required \n                        onChange={e => setEmail(e.target.value)} />\n\n                    <div style={{ position: \"absolute\", left: \"-5000px\" }} aria-hidden=\"true\">\n                        <input type=\"text\" name=\"b_388b4c4e898214aaf5d7be920_9a1f10895f\" tabindex=\"-1\" value=\"\" />\n                    </div>\n\n                    {/* <div class=\"clear\"> */}\n                    <input type=\"submit\" value=\"Subscribe\" name=\"subscribe\" id=\"mc-embedded-subscribe\" class=\"button\" />\n                    {/* </div> */}\n                </div>\n            </form>\n            {/* </div> */}\n            {/*  */}\n\n\n\n\n            {/* <form className='footerform' onSubmit={submit}> <br></br>\n                <h2>Sign up for my Newsletter!</h2>\n                <p>(description of newsletter)</p>\n                <label htmlFor='register-email'></label>\n                <input\n                    id='register-email'\n                    type='email'\n                    placeholder='Enter Email'\n                    onChange={e => setEmail(e.target.value)}\n                />\n                <input type='submit' value='Signup' />\n            </form> */}\n        </>\n    )\n}\n","import React from 'react'\nimport EmailSignup from '../layout/EmailSignup'\n\nexport default function Footer() {\n    return (\n        \n        <footer className='footer' id='footer'>\n            {/* <div className='footerDiv'></div> */}\n\n            {/* <div className='footerDiv'> */}\n                {/* <div className='icons'> */}\n                {/* </div> */}\n                {/* <h1 className='title'>Tara Martello</h1> */}\n                <EmailSignup />\n                <div className='icons'>\n                    <a href=\"https://www.instagram.com/taramartello_/?hl=en\" target=\"_blank\"><i className=\"fab fa-instagram fa-2x\"></i></a>\n                    <a href='https://www.facebook.com/tara.martello.5' target=\"_blank\"><i className=\"fab fa-facebook fa-2x\"></i></a>\n                    <a href='https://twitter.com/MartelloTara' target=\"_blank\"><i className=\"fab fa-twitter fa-2x\"></i></a>\n                </div>\n            {/* </div> */}\n\n            {/* <div className='footerDiv'></div> */}\n\n        </footer>\n\n    )\n}\n","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Switch, Route, useHistory } from 'react-router-dom';\nimport UserContext from './context/UserContext';\n// import SuccessContext from './context/SuccessContext';\nimport Axios from 'axios';\n\nimport Header from './components/layout/Header'\nimport Home from './components/pages/Home.js';\nimport Login from './components/auth/Login.js';\nimport Register from './components/auth/Register.js';\nimport Landing from './components/pages/Landing.js';\nimport Footer from './components/layout/Footer';\n// import CreateTodos from './components/todo/CreateTodos';\n// import GetTodos from './components/todo/GetTodos';\n// import SearchTodos from './components/todo/SearchTodo';\n\nimport './App.css';\n\nfunction App() {\n  const [userData, setUserData] = useState({\n    token: undefined,\n    user: undefined\n  })\n\n  const history = useHistory();\n\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      let token = localStorage.getItem(\"auth-token\");\n      if (token === null) {\n        localStorage.setItem('lastVisited', '');\n        localStorage.setItem('auth-token', '');\n        token = '';\n        return;\n      }\n\n      const tokenRes = await Axios.post(\n        '/api/users/tokenIsValid',\n        null,\n        { headers: { 'x-auth-token': token } }\n      );\n      if (tokenRes.data) {\n        const userRes = await Axios.get('/api/users/', {\n          headers: { 'x-auth-token': token }\n        });\n        setUserData({\n          token,\n          user: userRes.data\n        })\n      }\n    };\n    // checkLoggedIn();\n  }, [])\n\n  return (\n    <div className='main-container'>\n      <BrowserRouter>\n        <UserContext.Provider value={{ userData, setUserData }}>\n          {/* <SuccessContext.Provider value={{ todoSuccess, setTodoSuccess }}> */}\n          <Header />\n          {/* <div className='page'> */}\n          <Switch>\n            {/* <Route exact path='/' component={Home} /> */}\n            <Route exact path='/' component={Landing} />\n            <Route path='/login' component={Login} />\n            <Route path='/register' component={Register} />\n            {/* <Route path='/createtodos' component={CreateTodos} />\n              <Route path='/gettodos' component={GetTodos} />\n              <Route path='/searchtodos' component={SearchTodos} /> */}\n          </Switch>\n          {/* </div> */}\n          {/* </SuccessContext.Provider> */}\n          <Footer />\n        </UserContext.Provider>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}